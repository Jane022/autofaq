import allure
from playwright.sync_api import expect
import pytest
from functions.functions import enter_name, start_chat, send_button_click, emodji_click, smiling_emodji_select, enter_email
from pages.chat_page import ChatPage


class TestChat:

    @allure.story("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è –∏–º–µ–Ω–∏")
    def test_name_field_is_required(self, page, name):
        chat_page = ChatPage(page)
        chat_page.open()
        start_chat(page)
        enter_name(page, name)
        send_button_click(page)
        expect(chat_page.wrong_email_message()).to_have_text("–¢—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å –ø–æ—á—Ç—É.")

    @allure.story("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –ø–∞–Ω–µ–ª–∏ —ç–º–æ–¥–∑–∏")
    def test_emodji_panel_works_fine(self, page):
        chat_page = ChatPage(page)
        chat_page.open()
        start_chat(page)
        emodji_click(page)
        smiling_emodji_select(page)
        expect(chat_page.text_area()).to_have_text('üòÄ')

    @allure.story("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ —á–∞—Ç–∞")
    def test_chat_panel_opens_failing(self, page):
        chat_page = ChatPage(page)
        chat_page.open()
        start_chat(page)
        expect(chat_page.hello_text()).to_have_text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")


    @pytest.mark.parametrize("email", [
        "@mail.ru",
        "invalid-email",
        "user@.com",
    ])
    @allure.story("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –ø–æ–ª—è email")
    def test_email_field_negative(self, page, email, name):
        chat_page = ChatPage(page)
        chat_page.open()
        start_chat(page)
        enter_name(page, name)
        enter_email(page, email)
        send_button_click(page)
        expect(chat_page.wrong_email_message()).to_contain_text("–ü–æ—á—Ç–∞ –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")

    @allure.story("–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
    def test_user_data_send_positive(self, page, name, email):
        chat_page = ChatPage(page)
        chat_page.open()
        start_chat(page)
        enter_name(page, name)
        enter_email(page, email)
        send_button_click(page)
        expect(chat_page.user_data_panel()).not_to_be_visible()